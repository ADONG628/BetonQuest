name: Daily Dependency Check
on:
  schedule:
    - cron: "0 0 * * *"

jobs:
  artifacts:
    name: Build Artifacts
    if: "always() && github.repository == 'BetonQuest/BetonQuest'"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set mirror for http repositories in settings.xml
        uses: whelk-io/maven-settings-xml-action@v15
        with:
          mirrors: |
            [
              {
                "id": "betonquest-heroes-repo-http",
                "mirrorOf": "betonquest-heroes-repo",
                "url": "http://nexus.hc.to/content/repositories/pub_releases/",
                "blocked": "false"
              }
            ]

      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8
          overwrite-settings: false

      - name: Build with Maven
        run: |
          mvn -B package

  documentation:
    name: Build Documentation
    if: "always() && github.repository == 'BetonQuest/BetonQuest'"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: 'x64'

      - name: Select mkDocs requirements
        run: |
          [ -z $MKDOCS_MATERIAL_INSIDERS ] && TXT=docs-requirements.txt || TXT=docs-requirements-insiders.txt
          echo "TXT=$TXT" >> $GITHUB_ENV
        env:
          MKDOCS_MATERIAL_INSIDERS: ${{ secrets.MKDOCS_MATERIAL_INSIDERS }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r ./config/$TXT
        env:
          MKDOCS_MATERIAL_INSIDERS: ${{ secrets.MKDOCS_MATERIAL_INSIDERS }}

      - name: Build with mkdocs
        run: |
          mkdocs build

  alert:
    name: Alert to Discord
    if: failure()
    needs: [ artifacts, documentation ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish to Discord
        if: "always() && github.repository == 'BetonQuest/BetonQuest'"
        run: |
          bash .github/scripts/discord_cache_alert.sh
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
